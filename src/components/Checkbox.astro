---
export type Props = Omit<astroHTML.JSX.InputHTMLAttributes, 'type'>

const { ...attrs } = Astro.props
---

<label
  for={attrs.id}
  class:list={['checkbox-host', { disabled: attrs.disabled }]}
>
  <input type="checkbox" {...attrs} />
  <span class="checkmark"></span>
  <span class:list={['font-base', 'label-text']}><slot /></span>
</label>

<style>
  .checkbox-host {
    display: flex;
    align-items: center;

    cursor: pointer;
    user-select: none;

    &.disabled {
      cursor: not-allowed;
    }

    & input {
      height: 0;
      width: 0;

      position: absolute;
      opacity: 0;
    }

    & .checkmark {
      height: var(--space-16px);
      width: var(--space-16px);

      position: relative;

      border: 1.5px solid var(--color-secondary);
      border-radius: 6px;

      transition: background-color var(--transition-motion),
        border-color var(--transition-appearance),
        box-shadow var(--transition-smooth);
    }

    & input:not(:disabled):focus-visible ~ .checkmark {
      box-shadow: 0 0 0 var(--space-2px)
        hsl(var(--color-secondary-hsl) / var(--opacity-30));
    }

    &:hover input:not(:disabled) ~ .checkmark {
      border-color: var(--color-foreground);
    }

    & input:checked ~ .checkmark {
      background-color: var(--color-foreground);
    }

    & input:disabled ~ .checkmark,
    & input:disabled ~ .label-text {
      opacity: var(--opacity-40);
    }

    & .checkmark:after {
      content: '';
      position: absolute;
      display: none;
    }

    & input:checked ~ .checkmark:after {
      display: block;
    }

    & .checkmark:after {
      width: 100%;
      height: 100%;

      mask: url("data:image/svg+xml,%3Csvg width='8' height='7' viewBox='0 0 8 7' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.5 3L3 5.5L7.5 0.5' stroke='%23F3F3F5' stroke-width='1.3' stroke-linejoin='round'/%3E%3C/svg%3E%0A");
      mask-repeat: no-repeat;
      mask-position: center;

      background-color: var(--color-background);
    }
  }

  .label-text {
    margin-left: var(--space-10px);

    color: var(--color-secondary);
  }
</style>
